#ML play: some XGBoost implementations
library(tidyverse)

#read in data
tornadoes <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-05-16/tornados.csv')

#objective:predict the magnitude of a tornado based on the other variables in the dataset

# exploratory data analysis (eda)
glimpse(tornadoes)
View(tornadoes$mag)
str(tornadoes)

#variable correlation 
library(corrplot)
tornadoes_num <- tornadoes[sapply(tornadoes,is.numeric)]
str(tornadoes_num)
corrplot(cor(tornadoes_num), method="circle")
#no significant multicollinearity in the data

#visualise data
tornadoes |> ggplot(aes(mag),fill=fc) +
  geom_bar(position = position_dodge(preserve="single"))+
  scale_y_log10()

#Variable importance measure
tornadoes |> group_by(st) |> summarise(mag=mean(mag,na.rm=TRUE), n=n()) |> arrange(-mag)

#high level data suggests that we implement liklihood encoding instead of adding many additonal columds

tornadoes |> filter(!is.na(mag)) |>mutate(mag=factor(mag)) |>
ggplot(aes(mag,inj,fill=mag))+ geom_boxplot(alpha=0.6, show.legend=FALSE)+
scale_y_continuous(trans=scales::pseudo_log_trans())






